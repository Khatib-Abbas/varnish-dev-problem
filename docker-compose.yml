version: "3.4"

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - web
  caddy:
    build:
      context: api/
      target: api_platform_caddy
    depends_on:
      - php
    environment:
      VARNISH_UPSTREAM: ${VARNISH_UPSTREAM:-varnish}
      SERVER_NAME: ${SERVER_NAME:-localhost:8443, localhost, local.papi.jamendo.com, caddy.local, :80}
      BROWSER_SERVER_NAME: ${BROWSER_SERVER_NAME:-localhost:8443}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 8080
        protocol: tcp
      # HTTPS
      - target: 443
        published: 8443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 8443
        protocol: udp
    networks:
      - web

  database:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=api-platform
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - web

  varnish:
    build:
      context: api/
      target: varnish
    container_name: varnish
    volumes:
      - "./api/docker/varnish/conf/default.vcl:/etc/varnish/default.vcl"
    ports:
      - "80:80"
    tmpfs:
      - /var/lib/varnish:exec
    environment:
      UPSTREAM: caddy
      UPSTREAM_PORT: 80
      PHP_SERVICE: php
      VARNISH_SIZE: 2G
    command: "-p default_keep=300"
    depends_on:
      - caddy
    # for cors_allow_origin env variable sharing
    env_file:
      - api/.env
    networks:
      - web
      - internal 
volumes:
  php_socket:
  db_data:
  caddy_data:
  caddy_config:

networks:
  web:
    external: true
  internal:
    external: false
    driver: bridge
